// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl", "darwin", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int               @id @default(autoincrement())
  username     String            @unique
  password     String
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt
  transactions BookTransaction[]

  @@index([username])
}

model Book {
  id              Int               @id @default(autoincrement())
  title           String
  author          String
  isbn            String            @unique
  publicationYear Int
  coverImage      String?
  quantity        Int               @default(1)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  transactions    BookTransaction[]

  @@index([title])
  @@index([author])
}

model BookTransaction {
  id         Int       @id @default(autoincrement())
  bookId     Int
  userId     Int
  borrowDate DateTime  @default(now())
  returnDate DateTime?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  book Book @relation(fields: [bookId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([bookId])
  @@index([userId])
  @@index([borrowDate])
}
